# https://github.com/google/googletest

declare_args() {
  googletest_with_main = true
  googletest_with_gmock = true
}

declare_args() {
  googletest_pkgdef = ""
  googletest_pkgver = "latest"
  googletest_pkgurl = "https://github.com/google/googletest/releases/download/v{version}/googletest-{version}.tar.gz"
  googletest_pkgapi = "https://api.github.com/repos/google/googletest/tags"
}

declare_args() {
  if (googletest_pkgdef == "") {
    print(">> package 'googletest' @ ${googletest_pkgver}")
    googletest_pkgdir = exec_script("${mds_script_dir}/package.py",
                                    [
                                      "googletest",
                                      "-v=${googletest_pkgver}",
                                      "-u=${googletest_pkgurl}",
                                      "-a=${googletest_pkgapi}",
                                      "-m=name:v(.*)",
                                      "-p=googletest-{version}",
                                    ],
                                    "string")
  } else {
    print("<< package 'googletest' in ${googletest_pkgdef}")
    googletest_pkgdir = googletest_pkgdef
  }
}

config("gtest_config") {
  include_dirs = [ "${googletest_pkgdir}/googletest/include" ]

  if (googletest_with_gmock) {
    include_dirs += [ "${googletest_pkgdir}/googlemock/include" ]
  }
}

static_library("gtest") {
  sources = [ "${googletest_pkgdir}/googletest/src/gtest-all.cc" ]
  include_dirs = [ "${googletest_pkgdir}/googletest" ]

  if (googletest_with_gmock) {
    sources += [ "${googletest_pkgdir}/googlemock/src/gmock-all.cc" ]
    include_dirs += [ "${googletest_pkgdir}/googlemock" ]
  }

  if (googletest_with_main) {
    if (googletest_with_gmock) {
      sources += [ "${googletest_pkgdir}/googlemock/src/gmock_main.cc" ]
    } else {
      sources += [ "${googletest_pkgdir}/googletest/src/gtest_main.cc" ]
    }
  }

  public_configs = [ ":gtest_config" ]
}
