template("gcc_toolchain") {
  not_needed(invoker, "*")
  if (defined(invoker.ccache)) {
    ccache = invoker.ccache
  } else {
    ccache = ""
  }
  if (defined(invoker.prefix)) {
    prefix = invoker.prefix
  } else {
    prefix = ""
  }

  toolchain(target_name) {
    if (defined(invoker.bindir)) {
      asm = rebase_path("${prefix}gcc", "", invoker.bindir)
      cc = rebase_path("${prefix}gcc", "", invoker.bindir)
      cxx = rebase_path("${prefix}g++", "", invoker.bindir)
      alink = rebase_path("${prefix}ar", "", invoker.bindir)
      solink = rebase_path("${prefix}g++", "", invoker.bindir)
      link = rebase_path("${prefix}g++", "", invoker.bindir)
    } else {
      asm = "${prefix}gcc"
      cc = "${prefix}gcc"
      cxx = "${prefix}g++"
      alink = "${prefix}ar"
      solink = "${prefix}g++"
      link = "${prefix}g++"
    }

    lib_switch = "-l"
    lib_dir_switch = "-L"

    tool("asm") {
      depfile = "{{output}}.d"
      command = "${ccache} ${asm} -MMD -MF ${depfile} {{defines}} {{include_dirs}} {{asmflags}} -c {{source}} -o {{output}}"
      depsformat = "gcc"
      description = "AS {{output}}"
      outputs = [ "{{source_out_dir}}/{{source_name_part}}.o" ]
    }

    tool("cc") {
      depfile = "{{output}}.d"
      command = "${ccache} ${cc} -MMD -MF ${depfile} {{defines}} {{include_dirs}} {{cflags}} {{cflags_c}} -c {{source}} -o {{output}}"
      depsformat = "gcc"
      description = "CC {{output}}"
      outputs = [ "{{source_out_dir}}/{{source_name_part}}.o" ]
    }

    tool("cxx") {
      depfile = "{{output}}.d"
      command = "${ccache} ${cxx} -MMD -MF ${depfile} {{defines}} {{include_dirs}} {{cflags}} {{cflags_cc}} -c {{source}} -o {{output}}"
      depsformat = "gcc"
      description = "CXX {{output}}"
      outputs = [ "{{source_out_dir}}/{{source_name_part}}.o" ]
    }

    tool("alink") {
      outname = "{{target_output_name}}{{output_extension}}"
      outfile = "{{output_dir}}/$outname"

      rspfile = outname + ".rsp"
      rspfile_content = "{{inputs}}"

      command = "${ccache} ${alink} rcs {{arflags}} {{output}} {{inputs}}"
      description = "AR $outname"
      outputs = [ outfile ]

      default_output_dir = "{{target_out_dir}}"
      default_output_extension = ".a"
      output_prefix = "lib"
    }

    tool("solink") {
      soname = "{{target_output_name}}{{output_extension}}"
      sofile = "{{output_dir}}/$soname"

      command = "${ccache} ${solink} -shared {{ldflags}} -o ${sofile} {{inputs}} {{solibs}} {{libs}}"
      description = "SOLINK $soname"
      outputs = [ sofile ]

      link_output = sofile
      depend_output = sofile

      # default_output_dir = "{{root_out_dir}}"
      default_output_extension = ".so"
      output_prefix = "lib"
    }

    tool("link") {
      outname = "{{target_output_name}}{{output_extension}}"
      outfile = "{{output_dir}}/$outname"

      command = "${ccache} ${link} {{ldflags}} -o ${outfile} {{inputs}} {{libs}} {{solibs}}"
      description = "LINK $outfile"
      outputs = [ outfile ]

      default_output_dir = "{{root_out_dir}}"
      default_output_extension = ".elf"
    }

    tool("stamp") {
      if (host_os == "win") {
        command = "type nul > {{output}}"
      } else {
        command = "touch {{output}}"
      }
      description = "STAMP {{output}}"
    }

    tool("copy") {
      if (host_os == "win") {
        command = "xcopy /-Y  {{source}} {{output}}"
      } else {
        command = "cp -af {{source}} {{output}}"
      }
      description = "COPY {{source}} {{output}}"
    }
  }
}
